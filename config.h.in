#ifndef __EZINJECT_CONFIG_H
#define __EZINJECT_CONFIG_H

#cmakedefine CMAKE_SIZEOF_VOID_P @CMAKE_SIZEOF_VOID_P@
#cmakedefine DEBUG
#cmakedefine EZ_ARCH_ARM
#cmakedefine EZ_ARCH_ARM64
#cmakedefine EZ_ARCH_I386
#cmakedefine EZ_ARCH_AMD64
#cmakedefine EZ_ARCH_MIPS
#cmakedefine EZ_ARCH_PPC64
#cmakedefine EZ_ARCH_HPPA
#cmakedefine EZ_TARGET_LINUX
#cmakedefine EZ_TARGET_FREEBSD
#cmakedefine EZ_TARGET_POSIX
#cmakedefine EZ_TARGET_ANDROID
#cmakedefine EZ_TARGET_WINDOWS
#cmakedefine EZ_TARGET_DARWIN
#cmakedefine HAVE_CPU_VLE
#cmakedefine HAVE_SHM_EXEC
#cmakedefine HAVE_STRSIGNAL
#cmakedefine HAVE_LIBC_DLOPEN_MODE
#cmakedefine HAVE_LIBC_DL_OPEN
#cmakedefine HAVE_DL_LOAD_SHARED_LIBRARY
#cmakedefine HAVE_LIBDL_IN_LIBC
#cmakedefine HAVE_SHM_SYSCALLS
#cmakedefine HAVE_RTLD_NOLOAD
#cmakedefine HAVE_PTRACE_SETREGS
#cmakedefine HAVE_PSR_T_BIT
#cmakedefine HAVE_PROPER_LIBGCC
#cmakedefine USE_ANDROID_ASHMEM
#cmakedefine USE_ARM_THUMB
#cmakedefine USE_CAPSTONE
#cmakedefine USE_FRIDA_GUM
#cmakedefine UCLIBC_OLD
#cmakedefine EZ_ARCH_HEADER "@EZ_ARCH_HEADER@"
#cmakedefine C_LIBRARY_NAME "@C_LIBRARY_NAME@"
#cmakedefine DYN_LINKER_NAME "@DYN_LINKER_NAME@"
#cmakedefine DL_LIBRARY_NAME "@DL_LIBRARY_NAME@"
#cmakedefine PTHREAD_LIBRARY_NAME "@PTHREAD_LIBRARY_NAME@"

// NOTE: Windows uses emulated syscalls to map `mmap` to `VirtualAlloc` and `munmap` to `VirtualFree`
#if (defined(EZ_TARGET_POSIX) || defined(EZ_TARGET_WINDOWS)) && !defined(EZ_TARGET_DARWIN)
#define HAVE_SYSCALLS
#endif

#ifdef HAVE_SYSCALLS
#define HAVE_SHELLCODE
#endif

#endif