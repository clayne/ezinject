env:
  EZSDK_SMOKE_TEST: 1

linux_arm64_task:
  arm_container:
    dockerfile: .ci/linux_arm64/Dockerfile

  env:
    PATH: /usr/local/bin:${PATH}

  install_script:
    - apt-get -qq update
    - apt-get install -y cmake

  script:
    - ./build.sh

  test_script:
    - (cd build; ctest -V)

linux_x64_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /usr/local/bin:${PATH}

  script:
    - ./build.sh
  #test_script:
  #  - (cd build; ctest -V)

# targeting LG NC4/WebOS (ARM Cortex A9, glibc 2.12)
linux_lgtv_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /opt/arm-lgtv-linux-gnueabi_sdk-buildroot/bin:${PATH}
    LD_LIBRARY_PATH: /opt/arm-lgtv-linux-gnueabi_sdk-buildroot/lib:${LD_LIBRARY_PATH}

  script:
   - ./build.sh /opt/arm-lgtv-linux-gnueabi_sdk-buildroot/share/buildroot/toolchainfile.cmake

linux_android_armel_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /usr/local/bin:/opt/android-ndk-r14b-android-9/bin:${PATH}

  build_capstone_script:
    - (
        mkdir staging;
        cd staging;
        git clone -b 4.0.2 https://github.com/aquynh/capstone.git;
      )
    - ./targets/android_build_capstone.sh /opt/android-ndk-r14b-android-9 ./staging/capstone

  script:
    - ./build.sh ./targets/arm-android.cmake
        -DEZ_LIBC=bionic
        -DEZ_LIBC_VARIANT=android-10
        -DANDROID_ABI=armeabi-v7a
        -DCMAKE_SYSTEM_VERSION=9
        -DUSE_ARM_THUMB=ON
        -DCAPSTONE_PREFIX=$(readlink -f ./staging/capstone/out/usr)

linux_android_aarch64_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /usr/local/bin:/opt/android-ndk-r14b-android-21-arm64/bin:${PATH}
  script:
    - ./build.sh ./targets/arm64-android.cmake
        -DEZ_LIBC=bionic
        -DEZ_LIBC_VARIANT=android-10
        -DANDROID_ABI=arm64-v8a
        -DCMAKE_SYSTEM_VERSION=21

# targeting ADB Epicentro/DLink DVA 5592 (Broadcom Armv7)
linux_uclibc_armel_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /opt/arm-buildroot-linux-uclibcgnueabi/bin:${PATH}
    LD_LIBRARY_PATH: /opt/arm-buildroot-linux-uclibcgnueabi/lib:${LD_LIBRARY_PATH}

  script:
    - ./build.sh ./targets/arm-buildroot-bcm-uclibc.cmake

# targeting Asus DSL-N55U D1 (TrendChip MIPS BE)
linux_uclibc_mipsbe_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /opt/trendchip/mips-linux-uclibc/usr/bin:${PATH}

  script:
    - ./build.sh ./targets/trendchip.cmake

# targeting TomTom GO
linux_glibc_armv4_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  env:
    PATH: /opt/ttgo/gcc-3.3.4_glibc-2.3.2/bin:${PATH}

  script:
    - ./build.sh targets/ttgo-arm-linux.cmake
        -DEZ_LIBC=glibc-old

linux_powerpc64le_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  script:
    - ./build.sh targets/ppc64le.cmake
        -DEZ_LIBC=glibc-old

linux_riscv64_task:
  container:
    dockerfile: .ci/linux/Dockerfile

  script:
    - ./build.sh targets/ppc64le.cmake
        -DEZ_LIBC=glibc

freebsd_x64_task:
  freebsd_instance:
    image_family: freebsd-14-2

  install_script:
    - pkg update
    - pkg install -y bash cmake capstone pkgconf
  script:
    - ./build.sh
  test_script:
    - (cd build; ctest -V)

windows_x86_task:
  windows_container:
    dockerfile: .ci/windows/Dockerfile
  env:
    CIRRUS_SHELL: powershell
    MSYS: winsymlinks:nativestrict
    MSYSTEM: MINGW32
    CHERE_INVOKING: 1
    EZSDK_SMOKE_TEST: 1
  script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "mkdir build"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake .. -G 'MSYS Makefiles'"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake --build . -j $(nproc)"
    - exit $LastExitCode
  test_script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && ctest -V"

windows_x64_task:
  windows_container:
    dockerfile: .ci/windows/Dockerfile
  env:
    CIRRUS_SHELL: powershell
    MSYS: winsymlinks:nativestrict
    MSYSTEM: MINGW64
    CHERE_INVOKING: 1
    EZSDK_SMOKE_TEST: 1
  script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "mkdir build"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake .. -G 'MSYS Makefiles'"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake --build . -j $(nproc)"
    - exit $LastExitCode
  test_script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && ctest -V"
